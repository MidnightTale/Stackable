plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta15'
}

group = 'net.hynse'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT"
    implementation("com.github.NahuLD.folia-scheduler-wrapper:folia-scheduler-wrapper:v0.0.3")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
tasks {
    jar {
        manifest {
            attributes('paperweight-mappings-namespace': 'mojang')
        }
    }

    shadowJar {
        archiveClassifier.set('')
        relocate 'com.github.NahuLD', 'net.hynse.link.lib'
        minimize()

        doFirst {
            logger.lifecycle("Starting ShadowJar task")
            logger.lifecycle("Relocating 'com.github.NahuLD' to 'net.hynse.hitpoint.lib'")
        }

        doLast {
            logger.lifecycle("ShadowJar task completed. Output: ${archiveFile.get().asFile.absolutePath}")
        }

        manifest {
            attributes('paperweight-mappings-namespace': 'mojang')
        }
    }

    build {
        dependsOn(shadowJar)
        doFirst {
            logger.lifecycle("Starting build task")
        }
        doLast {
            logger.lifecycle("Build task completed")
        }
    }
}
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
